{
  "openapi": "3.1.0",
  "info": {
    "version": "0.1.0",
    "title": "REST API for Blackmagic camera",
    "description": "Blackmagic camera REST API"
  },
  "paths": {
    "/transports/0": {
      "get": {
        "operationId": "getTransports0",
        "summary": "Get device's basic transport status.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Transport mode Response.",
                      "enum": [
                        "InputPreview",
                        "InputRecord",
                        "Output"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putTransports0",
        "summary": "Set device's basic transport status.",
        "requestBody": {
          "description": "Set the transport mode",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mode": {
                    "type": "string",
                    "description": "Transport mode Request.",
                    "enum": [
                      "InputPreview",
                      "Output"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/transports/0/stop": {
      "get": {
        "operationId": "getTransports0Stop",
        "summary": "Determine if transport is stopped.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "True when transport mode is InputPreview or when in Output mode and speed is 0"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putTransports0Stop",
        "summary": "Stop transport.",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/transports/0/play": {
      "get": {
        "operationId": "getTransports0Play",
        "summary": "Determine if transport is playing.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "True when transport is in Output mode and speed is non-zero"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putTransports0Play",
        "summary": "Start playing on transport.",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/transports/0/playback": {
      "get": {
        "operationId": "getTransports0Playback",
        "summary": "Get playback state.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Play",
                        "Jog",
                        "Shuttle",
                        "Var"
                      ]
                    },
                    "loop": {
                      "type": "boolean",
                      "description": "When true playback loops from the end of the timeline to the beginning of the timeline"
                    },
                    "singleClip": {
                      "type": "boolean",
                      "description": "When true playback loops from the end of the current clip to the beginning of the current clip"
                    },
                    "speed": {
                      "type": "number",
                      "description": "Playback Speed, 1.0 for normal forward playback"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Playback position on the timeline in units of video frames"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putTransports0Playback",
        "summary": "Set playback state.",
        "requestBody": {
          "description": "Update playback state",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Play",
                      "Jog",
                      "Shuttle",
                      "Var"
                    ]
                  },
                  "loop": {
                    "type": "boolean",
                    "description": "When true playback loops from the end of the timeline to the beginning of the timeline"
                  },
                  "singleClip": {
                    "type": "boolean",
                    "description": "When true playback loops from the end of the current clip to the beginning of the current clip"
                  },
                  "speed": {
                    "type": "number",
                    "description": "Playback Speed, 1.0 for normal forward playback"
                  },
                  "position": {
                    "type": "integer",
                    "description": "Playback position on the timeline in units of video frames"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/transports/0/record": {
      "get": {
        "operationId": "getTransports0Record",
        "summary": "Get record state.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recording": {
                      "type": "boolean",
                      "description": "Is transport in Input Record mode"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putTransports0Record",
        "summary": "Set record state.",
        "requestBody": {
          "description": "Update record state",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recording": {
                    "type": "boolean",
                    "description": "Is transport in Input Record mode"
                  },
                  "clipName": {
                    "type": "string",
                    "description": "Used to set the requested clipName to record to, when specifying \"recording\" attribute to True"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/transports/0/timecode": {
      "get": {
        "operationId": "getTransports0Timecode",
        "summary": "Get device's timecode.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timecode": {
                      "type": "number",
                      "description": "The time of day timecode in units of binary-coded decimal (BCD)."
                    },
                    "clip": {
                      "type": "number",
                      "description": "The position of the clip timecode in units of binary-coded decimal (BCD)."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transports/0/timecode/source": {
      "get": {
        "operationId": "getTransports0TimecodeSource",
        "summary": "Get timecode source selected on device",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timecode": {
                      "type": "string",
                      "enum": [
                        "Timecode",
                        "Clip"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lens/iris": {
      "get": {
        "operationId": "getLensIris",
        "summary": "Get lensâ€™ aperture.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "continuousApertureAutoExposure": {
                      "type": "boolean",
                      "description": "Is Aperture controlled by auto exposure"
                    },
                    "apertureStop": {
                      "type": "number",
                      "description": "Aperture stop value"
                    },
                    "normalised": {
                      "type": "number",
                      "description": "Normalised value"
                    },
                    "apertureNumber": {
                      "type": "number",
                      "description": "Aperture number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putLensIris",
        "summary": "Set lensâ€™ aperture.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apertureStop": {
                    "type": "number",
                    "description": "Aperture stop value"
                  },
                  "normalised": {
                    "type": "number",
                    "description": "Normalised value"
                  },
                  "apertureNumber": {
                    "type": "number",
                    "description": "Aperture number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lens/zoom": {
      "get": {
        "operationId": "getLensZoom",
        "summary": "Get lensâ€™ zoom.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "focalLength": {
                      "type": "integer",
                      "description": "Focal length in mm"
                    },
                    "normalised": {
                      "type": "number",
                      "description": "Normalised value"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putLensZoom",
        "summary": "Set lensâ€™ aperture.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "focalLength": {
                    "type": "integer",
                    "description": "Focal length in mm"
                  },
                  "normalised": {
                    "type": "number",
                    "description": "Normalised value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lens/focus": {
      "get": {
        "operationId": "getLensFocus",
        "summary": "Get lensâ€™ focus.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "focus": {
                      "type": "number",
                      "description": "Normalised value"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putLensFocus",
        "summary": "Set lensâ€™ focus.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "focus": {
                    "type": "number",
                    "description": "Normalised value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lens/focus/doAutoFocus": {
      "put": {
        "operationId": "putLensDoAutoFocus",
        "summary": "Perform auto focus.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    },
    {
      "description": "Local Mocking",
      "url": "https://localhost/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    },
    {
      "description": "Camera1 to be declare in DNS or Hosts file",
      "url": "https://camera1/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    },
    {
      "description": "Camera2 to be declare in DNS or Hosts file",
      "url": "https://camera2/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    },
    {
      "description": "Camera3 to be declare in DNS or Hosts file",
      "url": "https://camera3/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    },
    {
      "description": "Camera4 to be declare in DNS or Hosts file",
      "url": "https://camera4/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    },
    {
      "description": "Camera5 to be declare in DNS or Hosts file",
      "url": "https://camera5/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    },
    {
      "description": "Camera6 to be declare in DNS or Hosts file",
      "url": "https://camera6/PIERRECOLOT_1/Blackmagic_Camera_API/0.1.0"
    }
  ]
}
