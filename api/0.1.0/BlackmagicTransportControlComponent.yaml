# OpenAPI version identifier - required for OpenAPI 3.1 domains
openapi: 3.1.0

#######################
# Optional info section
#######################
info:
  version: 0.1.0
  title: Blackmagic Transport Control Components
  description: Blackmagic Transport Control components for Blackmagic REST APIs

components:
  ####################
  # Common data models
  ####################
  schemas:
    GetTransportMode:
      type: object
      properties:
        mode:
          type: string
          description: Transport mode Response.
          enum:
          - InputPreview
          - InputRecord
          - Output
    PutTransportMode:
      type: object
      properties:
        mode:
          type: string
          description: Transport mode Request.
          enum:
          - InputPreview
          - Output
    GetStop:
      type: boolean
      description: True when transport mode is InputPreview or when in Output mode and speed is 0
    GetPlay:
      type: boolean
      description: True when transport is in Output mode and speed is non-zero
    GetPlayback:
      type: object
      properties:
        type:
          type: string
          enum:
          - Play
          - Jog
          - Shuttle
          - Var
        loop:
          type: boolean
          description: When true playback loops from the end of the timeline to the beginning of the timeline
        singleClip:
          type: boolean
          description: When true playback loops from the end of the current clip to the beginning of the current clip
        speed:
          type: number
          description: Playback Speed, 1.0 for normal forward playback
        position:
          type: integer
          description: Playback position on the timeline in units of video frames
    PutPlayback:
      type: object
      properties:
        type:
          type: string
          enum:
          - Play
          - Jog
          - Shuttle
          - Var
        loop:
          type: boolean
          description: When true playback loops from the end of the timeline to the beginning of the timeline
        singleClip:
          type: boolean
          description: When true playback loops from the end of the current clip to the beginning of the current clip
        speed:
          type: number
          description: Playback Speed, 1.0 for normal forward playback
        position:
          type: integer
          description: Playback position on the timeline in units of video frames 
    GetRecord:
      type: object
      properties:
        recording:
          type: boolean
          description: Is transport in Input Record mode
    PutRecord:
      type: object
      properties:
        recording:
          type: boolean
          description: Is transport in Input Record mode
        clipName:
          type: string
          description: Used to set the requested clipName to record to, when specifying "recording" attribute to True
    GetTimecode:
      type: object
      properties:
        timecode:
          type: number
          description: The time of day timecode in units of binary-coded decimal (BCD).
        clip:
          type: number
          description: The position of the clip timecode in units of binary-coded decimal (BCD).
    GetTimecodeSource:
      type: object
      properties:
        timecode:
          type: string
          enum:
          - Timecode
          - Clip

  ####################
  # Common parameters
  ####################
  parameters: {}

  #######################
  # Common request bodies
  #######################
  requestBodies: {}
  
  ####################
  # Common responses
  ####################
  responses: {}

  #########################
  # Common headers
  # (except request headers - they are defined as parameters)
  #########################
  headers: {}

  #######################
  # Common path items
  #######################
  pathitems:
    transports.0:
      get:
        operationId: getTransports0
        summary: Get device's basic transport status.
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetTransportMode'
      put:
        operationId: putTransports0
        summary: Set device's basic transport status.
        requestBody:
            description: Set the transport mode
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PutTransportMode'
        responses:
          204:
            description: No Content
    transports.0.stop:
      get:
        operationId: getTransports0Stop
        summary: Determine if transport is stopped.
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetStop'
      put:
        operationId: putTransports0Stop
        summary: Stop transport.
        responses:
          204:
            description: No Content
    transports.0.play:
      get:
        operationId: getTransports0Play
        summary: Determine if transport is playing.
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetPlay'
      put:
        operationId: putTransports0Play
        summary: Start playing on transport.
        responses:
          204:
            description: No Content
    # Workaround for typegen not working with same schema called from get and put
    transports.0.playback:
      get:
        operationId: getTransports0Playback
        summary: Get playback state.
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetPlayback'
      put:
        operationId: putTransports0Playback
        summary: Set playback state.
        requestBody:
          description: Update playback state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPlayback'
        responses:
          204:
            description: No Content
    transports.0.record:
      get:
        operationId: getTransports0Record
        summary: Get record state.
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetRecord'
      put:
        operationId: putTransports0Record
        summary: Set record state.
        requestBody:
          description: Update record state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecord'
        responses:
          204:
            description: No Content
    transports.0.timecode:
      get:
        operationId: getTransports0Timecode
        summary: Get device's timecode.
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetTimecode'
    transports.0.timecode.source:
      get:
        operationId: getTransports0TimecodeSource
        summary: Get timecode source selected on device
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetTimecodeSource'

  ######################################
  # Common examples of input/output data
  ######################################
  examples:  {}

  #########################
  # Common link definitions
  # See: https://swagger.io/docs/specification/links/
  #########################
  links: {}

  #########################
  # Common callback definitions
  # See: https://swagger.io/docs/specification/callbacks/
  #########################
  callbacks: {}